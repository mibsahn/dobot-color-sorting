function [qUR3, qUR5] = WallBuildJointState(UR3, brickUR3, wayPoint1UR3, wayPoint2UR3, wallUR3, UR5, brickUR5, wayPoint1UR5, wayPoint2UR5, wallUR5)

%WallBuildJointState Return joint state
%   Use ikcon to calculate required joint state of robot
q0UR5 = zeros(1,7);
q0UR3 = zeros(1,6);
ur3 = UR3;
ur5 = UR5;
orientBrickEffector = trotx(pi);

qUR5 = zeros(5,7,4);
qUR3 = zeros(5,6,5);
for i = 1:4
    qUR5(1,:,i) = q0UR5;
    qUR5(2,:,i) = ur5.model.ikcon(brickUR5(i).objPose * orientBrickEffector);
    qUR5(3,:,i) = ur5.model.ikcon(wayPoint1UR5(:,:,i) * orientBrickEffector, qUR5(2,:,i));
    qUR5(4,:,i) = ur5.model.ikcon(wayPoint2UR5(:,:,i) * orientBrickEffector, qUR5(3,:,i));
    qUR5(5,:,i) = ur5.model.ikcon(wallUR5(:,:,i) * orientBrickEffector, qUR5(4,:,i));
    
end

